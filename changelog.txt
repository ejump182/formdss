*********************
Version 2.0.6 Beta:
*********************

** New Features:

--Changed the nature of "groupscope", ie: how "view entries by others in the same group(s)" behaves:  

Before this, a user's ability to view other entries by users in the same group was determined solely based on group membership.  So if two users were a member of the same group, any group, then they would have the ability to view each other's entries.  The sole exception was Registered Users, since everyone in the system is a member of that group.

Now, in addition to having membership in at least one group in common, that common group must have view_form permission for the form in question.  This affects the "one entry per group" setting on the form settings page as well.  

The benefit is that you can have a National Volunteers group for everyone in your organization, and a Toronto Volunteers group and a Vancouver Volunteers group for only people local to each area, and as long as you only hand out form permissions to the local groups, then members of those groups will be limited in scope to their local area.  They can still have membership in common in the National Volunteers group, but that will no longer open up all the local entries across the country to everyone else.  Before this change, having everyone in a national group like that would have effectively meant "groupscope" was the same as "globalscope".

--You can now create a custom registration/user profile form, and integrate it with the XOOPS core through use of the Registration Codes module.  See the readme file for the Registration Codes module for details.
--Formulize is now compatible with the xLanguage module.
--The title of the form is now used as the HTML page title (thanks to dpicella for the code)
--You can now pass custom text for the Save button, as well as custom text for the All Done button, to the displayForm function.
--Added the current version to the bottom of the main admin page.

** Changes/Fixes:

--Deprecated bypass_form_menu permission which was introduced in 2.0.4.  Previously, users required access to the Form Menu block OR bypass_form_menu permission, in order to view a form.  Now, view_form permission is all that is required, regardless of access to the Form Menu block.
--Changed the default behaviour for anonymous users so that they never see the list of entries screen, and only ever see the form itself (change suggested by Steve Kenow)
--Fixed a long standing bug where the "headerlist", the default columns displayed on the view entries page, would be lost if any change was made to a form, including creating new elements, reordering elements or changing any caption. --Corrected a PHP 5 compatibility issue in the data extraction layer.
--Fixed a bug related to form titles and use of multilanguage hacks.
--Introduced an intermediate form validation function that precedes the default XOOPS core validation function.  In future this can be used to perform any kind of verification/validation on data entered into a form, prior to it being submitted to the database.
--included dpicella's safestrtotime function which allows date fields to handle dates prior to the origin of Unix (December 31 1969).
--Fixed a bug in the export of data, when there were hard returns in data entered into textboxes.  The hard returns were being translated directly into the .csv instead of being treated as line breaks.
--Fixed an obscure bug that occurred in forms created with the displayElement function, if there was a null or zero default value for the element.

*********************
Version 2.0.5 Beta:
*********************

IMPORTANT:  Read the readme file for this patch.  There are other things to do besides overwrite your files.

** New Features:

--Added the ability to create new entries in a form by importing data from a .csv file, and added a permission to allow or disallow this ability on a per form basis.
--Added an option to allow the default values for form elements to be saved to the database even when those elements are not visible to the current user.  This allows for situations where you need a some default data to be stored with each entry, but do not want all users to be able to interact with the form elements that control that data.  ie: someone places an order using a form, and a manager elsewhere can review the order and update its status.  The status element is accessible only to the manager so that the person placing the order cannot fiddle with the order status, but when the person places the order you still need a default status, such as "pending" to be written to the database so the order shows up with the correct status when a manager reviews it for the first time.
--Added four metadata fields to the list of selectable columns on the "change columns" screen: user who created entry, user who last modified entry, creation data, and last modification date.  Note: if you sort by username, the result is based on user ID number and not spelling.  :-(
--Added the displayElementSave function to give application developers control over the placement of the "Save" button when using displayElement in a Pageworks page.
--Added an override parameter to displayForm and displayEntries which forces the display of all forms in a "unified-display framework" regardless of the user's permissions to view the individual forms.
--Added a parameter to the getData function to force queries on a framework to work with the main form only (ignore all linked forms)
--Added ability to use getData to query any table in the database
--Added the displayMeta function to handle printing out the names of users based on ID numbers
--Added the ability to access "display" functions using a smarty template in your Pageworks pages
--Added a parameter to displayForm so that you can add some standard user account fields to the top of any form.  This allows you to have a single form where people can edit their full name, username, password, e-mail address, and time zone, plus whatever custom fields you want to have in the form.  
--All forms now use the Xoops security token system
--Added language constants

** Changes/Fixes:

--Included two bug fixes from Steve Kenow.  Thanks!!
--Changed the displayButton and displayElement functions to use frameworks
--Fixed a bug in the data extraction layer which caused invalid results to be returned when using a metadata filter on a framework where no entries in a linked form matched the criteria (huh?!)
--Optimized memory usage in the extraction layer again
--Fixed a bug that required view_groupscope permission for a form if the form was set to "one entry per group"

*********************
Version 2.0.4 Beta:
*********************

** New Features:

--Included dpicella's improvement to the {TODAY} keyword so that {TODAY-10} and {TODAY+3} can be used in advanced searches
--Added the displayElement function
--Added the displayButton function
--Added the option to use a complex set of arrays for the filter in the getData function, to support more complex boolean structures
--Added support for filtering by any metadata field (uid, proxyid, creation_date, mod_date)
--Added support for filtering by the element ID number when using a regular form and not a framework
--Added support for any kind of operator as part of a filter
--Added support for using an array of groupids as the scope for the getData function

** Calendar:

--Added a "delete" option to the calendar generated by displayCalendar, and some formatting improvements
--Added support for ranges to dates to displayCalendar
--Added a displayFilter function for use with displayCalendar, so the entries in the calendar can be limited to only ones that match a criteria in a dropdown list

** General:

--Included retspoox's fix for a major bug that occurred when using Formulize with PHP 4.4.0.  If you were having the same form element repeat over and over again, this problem is fixed now.  
--Major optimization to the extraction layer when getting data from linked forms (only data linked to the main form is used to generate the final result set)
--Various changes throughout so that the id number of the form is used in the URL instead of the name of the form
--Changed the permission structure so that access to the Form Menu is normally required in order to have access to a form (you cannot normally just go to the URL for a form, unless you have permission to view the Form Menu)
--Added a new permission, bypass_form_menu, that allows users direct access to a form via the URL even if they do not have access to the Form Menu
--Added a partial French translation
--Improved the interface for displaying entries in subforms when viewing an entry in a main form (up to three values are displayed for each entry, not just the first value)
--Added a param to the displayEntries function to restrict the available views when loading a specific view
--Changed the formatting of the list of available views in the Save View screen
--Added partial support for Marcan's multilanguage hack throughout
--Added another layer to the security check to account for cases where users have received access to information courtesy of a published view
--Improved the handling of the default columns in cases where no defaults have been specified by the form creator and there are no required fields
--Altered the delete-an-entry logic so that all related entries are also deleted if the user is interacting with a framework of forms
--Improved the gathering of metadata about an entry so irregularities in the database don't cause the incorrect modification time to be returned
--Fixed a bug related to updating the modification user for an entry in one form in a framework when another user is the owner of the corresponding entry in the main form in the framework
--Several minor bug fixes
--Added support for integrating data from one-to-one forms in a framework when queried with the getData function
--Fixed a bug that was preventing the "lock controls" option for a saved view from actually being saved as part of the view
--Fixed a bug that prevented loaded view from being displayed if the user did not have the view published to them
--Fixed a bug that occurred when using Formulize and the multilanguage hack which resulted in previously entered data being lost in the database if the caption for a form element was changed
--Updated the API document called Using_Formulize-Pageworks_to_Make_Custom_Applications.pdf

*********************
Version 2.0.3 Beta:
*********************

IMPORTANT:  Read the readme file for this patch.  There are a couple other things to do besides overwrite your files.

--Added a "Printable View" button to the bottom left of every form.  This button causes a popup window to appear with the current form in it, including all the details of the current entry as of the last time it was saved.  This window is suitable for printing since it has no header, footer, menu blocks, etc.
--Added the ability to turn individual form elements on or off for specific groups.  The Display checkbox in the form creation/form editing interface has been changed to a listbox containing all the groups.
--Added an option in the form creation/form editing interface for text boxes to be set to "numbers only", which will cause all non-numeric characters users might type in the box to be ignored.  This is so you can ensure that mathematical operations using the values in a text box will work correctly.
--Added an "Add multiple entries" button to the summary list of entries.  Changed the behaviour of the "Add a new entry" button so that it only lets you add one entry to a form.  This is because the previous behaviour of the "Add a new entry" button was to redisplay a blank form after you click the "Save" button.  That was confusing if you only wanted to add one entry.
--converted the functioning of the displayCalendar function to be fully templated using Smarty.  All the main display functions will be converted to this approach eventually.  TO USE THE CALENDAR FEATURE, UPDATE FORMULIZE IN YOUR SYSTEM ADMIN->MODULES AREA SO THE NEW TEMPLATES TAKE EFFECT.
--added three template options for displayCalendar:  'month' is the standard one month view.  'mini_month' is an abreviated month view where event names are accessible as tooltips when hovering over the day.  'micro_month' is a very small calendar view suitable for use in a block.  THE CALENDAR FEATURE IS STILL VERY EXPERIMENTAL, FULL TESTING HAS NOT BEEN COMPLETED, AND NEW PARAMETERS COULD BE INTRODUCED THAT WILL BREAK CURRENT APPLICATIONS.  
--Added a new parameter to displayForm called overrideSubMulti, which is used to override the default multi-entry form behaviour for subforms in a Framework.
--Fixed a bug where the delete sub-entry confirmation box would appear after pressing Enter in a textbox, if sub-entries that could be deleted were present in the form.
--Improved handling of forms with a one-to-one relationship in a framework.  Three or more forms in a one-to-one relationship should all work okay now, even if they are not all accessible by the same groups of users.
--Enabled the security check in formDisplay so that all forms in a Framework are verified before being displayed (previously only the first mainform in a Framework was verified).  This allows more complex Framework scenarios where users in different groups with different permissions can interact with the some of the forms in a unified-display Framework, but not others forms.
--Forced the text of "one column" text display elements to be non-bold.  This makes forms easier to read when the default text style for that table cell class is bold.
--Improved the UI for saving an entry when a sub-form has been accessed and the parent form is using overrideMulti.
--changed name of clone() function in admin-side code so as not to conflict with PHP 5.
--Slightly improved the UI for subforms by adding some instructional text.
--minor optimization to page loading; calls to extraneous code removed.
--minor HTML correction in popup windows off of the summary list of entries page
--Added code for the removal of links between entries in one-to-one related forms when one of the entries is deleted.
--Various language constants added for the new features
--Updated the API document called Using_Formulize-Pageworks_to_Make_Custom_Applications.pdf

*********************
Version 2.0.2 Beta:
*********************
--added displayCalendar function for interacting with form or framework data in a calendar style view - if you experience errors with the calendar, update the module in System Admin->Modules, and try again.
--added various language constants
--added security checks to account for invalid groups being specified as the scope of a view
--fixed a UI bug which could result in invalid groups being specified as the scope of a view
--expanded $overrideValue functionality in displayForm to include date boxes, not just select boxes
--more optimization of performance and memory usage in the extraction layer
--added handling of parse errors if the user specifies an invalid advanced search query.  A descriptive error message is now displayed when this happens.
--fixed bug where data in a form corresponding to a particular element was not being deleted when that element was deleted from the form
--changed handling of linked selectboxes to allow duplicate values to be sent from the source form element.  Previously, if two different source entries had the same value in the linked field, then only the first would be passed to the target form.  This means linked fields could have two or more options in them with identical text.
--added a new form action: clone form and data.  This will create a copy of a form, plus all the data that has been entered in the form
--enabled the edit_form and delete_form permissions.  Now, in the administration side, users will only have access to forms for which they have edit_form permission, and will only be allowed to delete forms for which they have delete_form permission.  Webmasters have these permissions by default.
--updated API docs with more conceptual information and lots more examples

*********************
Version 2.0.1 Beta:
*********************
--added a couple language constants
--added better handling of many-to-one relationships in a Framework (in addition to one-to-many relationships)
--improved display of entries in a non-unified-display Framework
--fixed a bug in the saving of entries, which would result in data for fields which had an apostrophe in the caption to not be saved correctly (if anyone has experienced lost data due to this, please contact us for assistance recovering the data, it is not gone, just not easily accessible).
--improved display of links to sub-forms when the key field for the link has no value
--improved memory usage in the data extraction layer
--added a button to the summary list UI, to allow for changing of specific group selections without having to pick a completely different kind of view first

*********************
Version 2.0 Beta:
*********************
--initial release