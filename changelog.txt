*********************
Version 2.0.4 Beta:
*********************

IMPORTANT:  Read the readme file for this patch.  If you are upgrading from a version BEFORE 2.0.3, there are a couple other things to do besides overwrite your files.

** New Features:

--Included dpicella's improvement to the {TODAY} keyword so that {TODAY-10} and {TODAY+3} can be used in advanced searches
--Added the displayElement function
--Added the displayButton function
--Added the option to use a complex set of arrays for the filter in the getData function, to support more complex boolean structures
--Added support for filtering by any metadata field (uid, proxyid, creation_date, mod_date)
--Added support for filtering by the element ID number when using a regular form and not a framework
--Added support for any kind of operator as part of a filter
--Added support for using an array of groupids as the scope for the getData function

** Calendar:

--Added a "delete" option to the calendar generated by displayCalendar, and some formatting improvements
--Added support for ranges to dates to displayCalendar
--Added a displayFilter function for use with displayCalendar, so the entries in the calendar can be limited to only ones that match a criteria in a dropdown list

** General:

--Included retspoox's fix for a major bug that occurred when using Formulize with PHP 4.4.0.  If you were having the same form element repeat over and over again, this problem is fixed now.  
--Major optimization to the extraction layer when getting data from linked forms (only data linked to the main form is used to generate the final result set)
--Various changes throughout so that the id number of the form is used in the URL instead of the name of the form
--Changed the permission structure so that access to the Form Menu is normally required in order to have access to a form (you cannot normally just go to the URL for a form, unless you have permission to view the Form Menu)
--Added a new permission, bypass_form_menu, that allows users direct access to a form via the URL even if they do not have access to the Form Menu
--Added a partial French translation
--Improved the interface for displaying entries in subforms when viewing an entry in a main form (up to three values are displayed for each entry, not just the first value)
--Added a param to the displayEntries function to restrict the available views when loading a specific view
--Changed the formatting of the list of available views in the Save View screen
--Added partial support for Marcan's multilanguage hack throughout
--Added another layer to the security check to account for cases where users have received access to information courtesy of a published view
--Improved the handling of the default columns in cases where no defaults have been specified by the form creator and there are no required fields
--Altered the delete-an-entry logic so that all related entries are also deleted if the user is interacting with a framework of forms
--Improved the gathering of metadata about an entry so irregularities in the database don't cause the incorrect modification time to be returned
--Fixed a bug related to updating the modification user for an entry in one form in a framework when another user is the owner of the corresponding entry in the main form in the framework
--Several minor bug fixes
--Added support for integrating data from one-to-one forms in a framework when queried with the getData function
--Fixed a bug that was preventing the "lock controls" option for a saved view from actually being saved as part of the view
--Fixed a bug that prevented loaded view from being displayed if the user did not have the view published to them
--Fixed a bug that occurred when using Formulize and the multilanguage hack which resulted in previously entered data being lost in the database if the caption for a form element was changed
--Updated the API document called Using_Formulize-Pageworks_to_Make_Custom_Applications.pdf

*********************
Version 2.0.3 Beta:
*********************

IMPORTANT:  Read the readme file for this patch.  There are a couple other things to do besides overwrite your files.

--Added a "Printable View" button to the bottom left of every form.  This button causes a popup window to appear with the current form in it, including all the details of the current entry as of the last time it was saved.  This window is suitable for printing since it has no header, footer, menu blocks, etc.
--Added the ability to turn individual form elements on or off for specific groups.  The Display checkbox in the form creation/form editing interface has been changed to a listbox containing all the groups.
--Added an option in the form creation/form editing interface for text boxes to be set to "numbers only", which will cause all non-numeric characters users might type in the box to be ignored.  This is so you can ensure that mathematical operations using the values in a text box will work correctly.
--Added an "Add multiple entries" button to the summary list of entries.  Changed the behaviour of the "Add a new entry" button so that it only lets you add one entry to a form.  This is because the previous behaviour of the "Add a new entry" button was to redisplay a blank form after you click the "Save" button.  That was confusing if you only wanted to add one entry.
--converted the functioning of the displayCalendar function to be fully templated using Smarty.  All the main display functions will be converted to this approach eventually.  TO USE THE CALENDAR FEATURE, UPDATE FORMULIZE IN YOUR SYSTEM ADMIN->MODULES AREA SO THE NEW TEMPLATES TAKE EFFECT.
--added three template options for displayCalendar:  'month' is the standard one month view.  'mini_month' is an abreviated month view where event names are accessible as tooltips when hovering over the day.  'micro_month' is a very small calendar view suitable for use in a block.  THE CALENDAR FEATURE IS STILL VERY EXPERIMENTAL, FULL TESTING HAS NOT BEEN COMPLETED, AND NEW PARAMETERS COULD BE INTRODUCED THAT WILL BREAK CURRENT APPLICATIONS.  
--Added a new parameter to displayForm called overrideSubMulti, which is used to override the default multi-entry form behaviour for subforms in a Framework.
--Fixed a bug where the delete sub-entry confirmation box would appear after pressing Enter in a textbox, if sub-entries that could be deleted were present in the form.
--Improved handling of forms with a one-to-one relationship in a framework.  Three or more forms in a one-to-one relationship should all work okay now, even if they are not all accessible by the same groups of users.
--Enabled the security check in formDisplay so that all forms in a Framework are verified before being displayed (previously only the first mainform in a Framework was verified).  This allows more complex Framework scenarios where users in different groups with different permissions can interact with the some of the forms in a unified-display Framework, but not others forms.
--Forced the text of "one column" text display elements to be non-bold.  This makes forms easier to read when the default text style for that table cell class is bold.
--Improved the UI for saving an entry when a sub-form has been accessed and the parent form is using overrideMulti.
--changed name of clone() function in admin-side code so as not to conflict with PHP 5.
--Slightly improved the UI for subforms by adding some instructional text.
--minor optimization to page loading; calls to extraneous code removed.
--minor HTML correction in popup windows off of the summary list of entries page
--Added code for the removal of links between entries in one-to-one related forms when one of the entries is deleted.
--Various language constants added for the new features
--Updated the API document called Using_Formulize-Pageworks_to_Make_Custom_Applications.pdf

*********************
Version 2.0.2 Beta:
*********************
--added displayCalendar function for interacting with form or framework data in a calendar style view - if you experience errors with the calendar, update the module in System Admin->Modules, and try again.
--added various language constants
--added security checks to account for invalid groups being specified as the scope of a view
--fixed a UI bug which could result in invalid groups being specified as the scope of a view
--expanded $overrideValue functionality in displayForm to include date boxes, not just select boxes
--more optimization of performance and memory usage in the extraction layer
--added handling of parse errors if the user specifies an invalid advanced search query.  A descriptive error message is now displayed when this happens.
--fixed bug where data in a form corresponding to a particular element was not being deleted when that element was deleted from the form
--changed handling of linked selectboxes to allow duplicate values to be sent from the source form element.  Previously, if two different source entries had the same value in the linked field, then only the first would be passed to the target form.  This means linked fields could have two or more options in them with identical text.
--added a new form action: clone form and data.  This will create a copy of a form, plus all the data that has been entered in the form
--enabled the edit_form and delete_form permissions.  Now, in the administration side, users will only have access to forms for which they have edit_form permission, and will only be allowed to delete forms for which they have delete_form permission.  Webmasters have these permissions by default.
--updated API docs with more conceptual information and lots more examples

*********************
Version 2.0.1 Beta:
*********************
--added a couple language constants
--added better handling of many-to-one relationships in a Framework (in addition to one-to-many relationships)
--improved display of entries in a non-unified-display Framework
--fixed a bug in the saving of entries, which would result in data for fields which had an apostrophe in the caption to not be saved correctly (if anyone has experienced lost data due to this, please contact us for assistance recovering the data, it is not gone, just not easily accessible).
--improved display of links to sub-forms when the key field for the link has no value
--improved memory usage in the data extraction layer
--added a button to the summary list UI, to allow for changing of specific group selections without having to pick a completely different kind of view first

*********************
Version 2.0 Beta:
*********************
--initial release