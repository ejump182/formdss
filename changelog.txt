*********************
Version 2.3 RC1:
*********************

IMPORTANT:  Read the readme file for this version.  There are other things to do besides overwrite your files.

** Major New Features (9)

50% OR GREATER PERFORMANCE IMPROVEMENTS
--Over 50% speed improvements on "list of entries" screens, thanks to caching and pagination of data.  Subsequent page loads from the cache are even faster than that.

VIEW LISTS OF ENTRIES ONE PAGE AT A TIME
--"List of entries" screens now show only ten entries at a time, and provide a navigation UI to browse through pages.

NEW "SCREEN" SYSTEM
--Added an admin side UI to provide extremely detailed control over how your "list of entries" screens look and behave.  Same for multi-page versions of forms.  For each form, you can now create multiple, customized versions of these two types of screens.  See the readme file for details.

INTEGRATION WITH DRUPAL
--You can now display forms and screens from Formulize inside your Drupal website.  See the included tutorial for details.

NOW PICK MULTIPLE COLUMNS AT ONCE FOR ADVANCED SEARCHES AND CALCULATIONS
--You can now select multiple columns at once when choosing calculations, and when specifying advanced search terms

NEW "COLORPICKER" FORM ELEMENT
--Added "colorpicker" elements, thanks to Inbox International

NEW "DERIVED VALUES" FORM ELEMENT
--Added "derived" value elements, which are fields in a form which have a value based on some math or logical operation performed on other values in the same entry.   For example, if an entry records an investment and a rate of return, you could add a derived value that calculated the actual return on the investment amount, by multiplying the investment amount by the rate of return.

NEW "GRID" ELEMENTS
--Added "grid" elements, which are simply a special way of displaying existing elements in the form in a table-like structure (based on the displayGrid function)

VIEW ALL TEXT IN TEXTBOXES ON THE PRINTABLE VIEW PAGE
--Improved handling of textboxes on the Printable View page, so that all their contents are displayed regardless of the size of the box

** Other New Features/Changes (14)

--"Creator's e-mail address" columns now only display the e-mail address if the user has flagged their e-mail address as visible to other users.
--You can now have HTML content inside the captions for elements
--Changed the default choice for "include blanks and zeros" on the calculations screen, to no blanks and zeros.
--The import system now recognizes required fields and won't import entries that are missing required fields in the form
--Changed the URL used in notifications based on the user profile form, if using the Registration Codes module, so the user is directed to the actual profile page, not the form entry
--Added backwards compatibility with older versions of XOOPS without the security class
--Improved the navigation UI in the multi page versions of forms (displayFormPages function)
--Improved multi page versions of forms to respect single-entry form rules better
--Average calculations rounded to two decimal places now
--Added security token checking to the List of Entries screen
--Changed single-cell "text for display" elements, so that the caption is used for the text if the actual contents are blank
--Slightly improved appearance of the list of elements on the admin page where you add elements to a form, by alternating the shading of the rows.  Useful on very large forms.
--Improved the checking for and prevention of duplicate element names within a form
--Improved the handling of the order value when creating elements, so you don't have to manually alter the order numbers of multiple elements you might be adding "at once" through multiple tabs in your browser

** Improvements and New API Features for Application Developers (9):

--prevValue parameter now optional in the writeEntryValue function (this function moved here from Pageworks)
--writeEntryValue function now works with linked selectboxes (replace action only)
--Modified behaviour of advanced searches that start with NOT.  Assumption is that the entire search is being negated, ie: everything is inside ( ) and you are searching for things that do not match that entire expression. 
--Internal changes to the displayFilter function, including support for linked selectbox fields, and selectbox fields based on usernames/fullnames
--Expanded the frameworks class to include more properties
--Added a frameworks handler class
--Expanded the forms class to include more properties
--Added a forms handler class
--Changed default form displaying behaviour for anonymous users, so they see the list of entries screen just like anyone else.  Note: all anonymous users will see the entries created by all other anonymous users, since all those individuals are treated as user 0 (zero) in the XOOPS system.

** General Additions/Changes/Fixes (17+):

--Fixed a cross-site scripting vulnerability.  Special thanks to Rasmus Lerdorf for generously taking the time to audit a live site at the Vancouver PHP conference!
--Various minor bug fixes throughout, thanks to the active community members who have posted in the forums and trackers!
--Made all opening PHP tags <?php so Formulize will work when short tags are off in the .ini file
--Added various security improvements by Zyspec (thanks!)
--Replaced all remaining references to PHP's mysql functions with references to the $xoopsDB functions, to completely encapsulate Formulize's DB interactions inside the XOOPS DB connection instance (necessary for integration with Drupal)
--Added a lot of caching of results in functions to provide some performance gains
--Various language constant updates throughout
--Fixed a magic_quotes bug related to the names of saved views
--Fixed a bug that caused values in certain fields to be erased under certain circumstances, only when displayElement and displayForm were used on the same web page
--Various input filtering and escaping enhancements throughout
--HTML characters now display properly in exported data
--Various notices and warnings cleared up throughout
--Fixed a bug that affected anonymous users cloning entries
--Fixed a complex bug that led to certain events not generating notifications to the right people, depending on the group memberships and group permissions of the affected users
--Fixed a bug in the display of elements in a grid, where blank spaces would be drawn in where elements that the user is not allowed to see would normally go
--Fixed various PHP 5 compatibility bugs
--Added garbage collection to export system, so old exported files don't clutter up the hard drive anymore

*********************
Version 2.2 RC1:
*********************

IMPORTANT:  Read the readme file for this patch.  There are other things to do besides overwrite your files.

There are over 60 changes, improvements and bug fixes in this release of Formulize, including over 30 new features!  

** Major New Features (11):

NOTIFICATIONS: 
--Added a full set of notification options, richer than XOOPS default notification options.  In addition to the basics, you can set specific conditions on what form entries you want to be notified about (ie: only where "Type of Order = air mail"), you can set notifications to be delivered to all users in other groups, you can set notifications to be delivered to the user who just created/updated/deleted the entry, and you can specify a custom message template to be used if you want something different from the standard messages

FULL IMPORT CAPABILITIES: 
--Vastly improved import feature that supports updating existing entries as well as adding new entries.  Validation of options fixed and improved.  Multilingual sites supported.  It also supports batch account creation if you import entries into a designated user profile form and you're using the registration codes module.  Detailed instructions are on the import popup screen; read them carefully.  Will not work on a framework; forms only.

"OTHER" TEXTBOX OPTION FOR CHECKBOXES AND RADIO BUTTONS: 
--Added an "Other" option to radio buttons and checkboxes so that a final option with a textbox beside it can be added to such a question

REAL DEFAULT PAGE AND NEW URL OPTIONS:
--Formulize can work with the Main Menu now, since if no form is specified in the URL, then the list of forms in the "General Forms" category is displayed instead.  Plus, you can navigate directly to an entry in a form with an URL like this:  http://www.yoursite.com/modules/formulize/index.php?fid=3&ve=46  OR, navigate directly to a framework with an URL like this:  http://www.yoursite.com/modules/formulize/index.php?frid=6&fid=11

MULTI-PAGE FORMS WITH SKIP LOGIC: 
--Added a multi-page form function (displayFormPages) which can be used to display a long form as a series of pages.  Supports "skip-logic" so you can have certain pages display or not display based on the answers to previous questions.

CLONE ENTRIES: 
--Added a "Clone Entries" feature so you can quickly make multiple copies of one or more entries in a form.  Works with frameworks too, and intelligently duplicates entries in subforms

DYNAMIC DEFAULTS: 
--Added a dynamic default option for textboxes, which lets you specify default values using PHP code

PRIVATE ELEMENTS: 
--Added a "private" option for all elements, which lets you mark a question as private and only users with special permission can view other people's answers to those questions.  Useful if not everyone who has access to the entries in a form is supposed to see every single question.  Also very useful in conjunction with the Registration Codes module to create highly customized profile forms.

AUTOMATIC SELECTBOXES WITH USERNAMES IN THEM: 
--Added an option for selectboxes to populate them based on the usernames or full names of users in one or more groups

FRAMEWORKS BASED ON COMMON VALUES IN ANY TWO FIELDS: 
--Added the ability to relate forms in a framework simply on the basis of having a common value in any field.  This is very powerful in conjunction with the new "dynamic default" capability in textboxes, and the newly functional "display as hidden" option.  You can essentially embed PHP code within a form to set a customized tag for the entry at the time the user creates it, without the user seeing this or having the ability to alter the text accidentally (or maliciously).  Proper setting of such tags on different forms, plus use of this common value feature in a framework gives application designers much more flexibility over how they arrange their forms and interfaces.

NEW AND IMPROVED SUBFORM UI: 
--Completely reworked the "subform" UI, the interface users get when filling in a form that has a "unified display" form attached to it in a framework.  You can specify where in the form the new subform UI should appear.  The new UI lets users add entries in the subform, without leaving the main form.  It also lets them modify certain elements in all the entries in the subform, without leaving the main form.  The result is many fewer clicks and more visibility of the data in the subform.

** Other New Features (18):

--User interface improvements in the list of entries screen:  reorganized buttons to make the "fill in the form" buttons more obvious to users; added "Type search terms here" to the first quicksearch box to help explain what the boxes are for; and added a notice if there are no entries to display currently, or no entries that match the search terms
--Added support for cookies for anonymous users making entries in a single-entry form, so when they return to the form, the information they previously entered will be available to them
--Added a "Saving..." and "Working..." message to the user interface when saving entries in a form, or making a query in the list of entries page
--Added option to remove the "All Done" button from the bottom of a form in certain situations
--Added metadata columns (user who created entry, user who last modified entry, creation date and modification date) to the list of selectable default fields for the list of entries screen
--Added "Creator's e-mail" column to the list of selectable columns in the list of entries page, so that the account e-mail address of the entry owner can be displayed along with the data in a form
--Added a delimiter option to checkboxes and radio buttons so you can control whether they are horizontal or vertical on a question by question basis
--Completely reworked and improved scope control over linked select boxes so you can specify from which groups entries should be gathered to make up the options in the box
--Added a "convert" option for textboxes so you can change single line textboxes into multi line boxes and vice versa
--Added a "description" option for all elements, which lets you put descriptive text below the question itself
--Added a "column heading" option so you can have different text for the names of the questions on the list of entries page than on the form itself
--Added an option in the permission control screen so you can select several groups and apply the same permission selection to all of them at once.  Saves A LOT of time in a site with lots of groups.
--Added an "association" option for textboxes, so their contents can be compared to entries in another form.  When there is a match, the text for this box shows up as a link on the list of entries page and when clicked opens a new window with the details of the corresponding entry.
--Added textboxes and textarea boxes to the list of elements handled by the "display as hidden" feature
--Added awareness of the "display as hidden" option to regular forms (previously only available with displayElement)
--Improved percentage breakdown calculations for questions where multiple answers are allowed; percentages now calculated against the total number of entries and the total number of answers.  Also added totals to the percentage breakdown.
--Added the ability to export calculations as well as entries.  Click the export button when looking at calculations to do this.
--Changed the redirect when users don't have permission for a form, so they are sent to the user.php page which will send them back to the form after they login

** Improvements and New API Features for Application Developers (9):

--Added a new sorting function, resultSortRelevance, which will sort entries in a dataset based on the prevalence of search terms in specified fields.  The importance of fields can be weighted based on the nature of the dataset.
--Added the displayCaption function to display only the caption for an element
--Added automatic generation of default handles for all elements in a form when updating the handles in the Frameworks section (this saves A LOT of time on a really long form, if you don't actually need to have human-readable handles; sometimes you just need handles specified since you have to query a framework and not a form)
--Added a special value of the settings parameter in the displayForm function, {RETURNAFTERSAVE}, which will cause a form to abort drawing to the screen after a submission, allowing the application developer to carry on and display other information to the user
--Added awareness of multi-page forms to the displayCalendar function
--improved behaviour of resultSort function when a multiple answer field is the sorting key
--displayElement and displayButton functions now support being passed an element object, not just an element ID or framework handle
--internalRecordIds function improved so that an entry can be passed with no form handle specified and an array of arrays is returned, one array for each form in the entry
--Added checkmark and circle images to complement the x image, useful if you need simple icons on a Pageworks page

** General Additions/Changes/Fixes (27+):

--Modified the edit form elements page, so that the new private option is displayed and can be turned on or off from there, and also the new convert option is accessible from there
--Started a forms and frameworks classes, but they do not have a full series of properties or methods yet
--Added extensive patching logic to correct potential errors in the database and update the structure and contents to match the current standards
--Added style parameter to the displayElementSave function to allow passing of CSS info to the save button
--Improved gathering of metadata about a form (user who created entry, user who last modified entry, creation date and modification date)
--Added permissions related to the new private elements feature and new notification feature
--Included the csstidy class (thanks to Florian Schmitz (floele at gmail dot com)) for use parsing the site's stylesheet when exporting calculations
--Added awareness of ports to the getCurrentURL function, so Formulize behaves correctly when the XOOPS site resides at a specific port number
--Changed how the default fields for the list of entries screen are stored so this setting is no longer lost when the fields in a form change
--Moved handling of displayElement submissions to Formulize from Pageworks, since the new subform interface relies on displayElement
--Changed HTTP_POST_VARS and HTTP_GET_VARS to _POST and _GET throughout
--Changed the order value for elements to be four digits instead of three, and it is autoincremented by fives now, not tens
--Added translation logic to exported files
--Various language constants added for new features
--Javascript updates throughout to remove the need for the selectbox core patch (thanks Skalpa!)
--Now properly handle slashes in user input when magic_quotes is on
--Better filtering of user input to protect against cross-site scripting attacks
--Altered the data extraction layer to handle the new data storage format for HTML special characters
--Internal improvements to the data extraction layer, including adding awareness of all new features, and protections against SQL injection
--Fixed a bug in how the default fields on the list of entries screen were determined when no specific defaults have been set by the user.
--Fixed a bug where the default date for dateboxes was not being set correctly
--Fixed a race condition bug in several places, which could result in multiple entries receiving the same ID number if they were created at precisely the same moment
--Fixed a bug in the detection of permission to view an entry
--Fixed a bug where quicksearches would remain in effect even after their columns were no longer visible (thereby preventing them from ever being turned off)
--Fixed a bug in the edit form elements page that caused elements with custom display options not to be updated correctly when altering settings on that page
--Fixed a bug where the default values for textboxes were displayed when viewing an entry where the originating users had left those boxes blank
--Various bug fixes throughout, thanks to the active community members who have posted in the forums and trackers!

*********************
Version 2.1 RC1:
*********************

** New Features:

--Added a new displayGrid function, which allows for displaying a portion of a form in a tabular, spreadsheet like way.  Useful for multiple page interfaces to a form, created in Pageworks, where certain pages require the user to fill in a table of information.
--50% or greater improvement in the speed of queries through the extraction layer, plus massive memory usage reductions.
--$overrideMulti param can now be used "in reverse" on a one-entry-per-user form to cause it to behave like a multiple-entries-per-user form
--The list of proxy users is now limited to only the users in someones own group(s) unless they have view_globalscope permission for a form
--If no default fields are specified for the "list of entries" page, and there are required fields in the form, only the first three required files are shown in the list (instead of all)

** Changes/Fixes:

--Changed all references to the form_ tables to formulize_ in order to make use of Formulize compatible with use of Formulaire
--Changed the height and width of the list of entries box to better fit on 1024x768 size screens
--Fixed a long standing bug with textarea elements, where the height and width of the box would not be remembered when going back in to edit an element (defaults were always used)
--Fixed a long standing bug where if there were not default fields for the "list of entries" page, and no required fields in the form, then no fields would be listed on the "list of entries" page.  Now the first three fields are listed.
--Fixed bug which caused an error when a group was deleted from the system, but some form elements had custom display options involving that group
--Fixed a bug in the displayCalendar function that arose when forms (not frameworks) were displayed in a calendar, and the element captions were used instead of element ids
--Fixed a bug in the displayElement function that caused an error if an invalid element was passed to the function
--Fixed a bug that caused metadata fields to not be remembered when they were selected in the Change Columns screen, and then the user returned there to change columns again
--Fixed a bug where the words yes and no (or oui/non, etc) could not be used in quick searches of yes/no columns on the list of entries page
--Fixed a bug related to the reg_codes module, that caused incorrect display of the default timezone on the profile form
--Fixed a bug that caused a problem with certain linked selectbox values
--Fixed a bug where, in a multilanguage site, element captions were not being translated in the Calculations screen
--Removed some duplicated code
--Changed how users view entries in forms in a framework, when viewing the form itself, so that their own permission level takes precedence instead of the permission level of the owner of the data
--Disabled use of strsafetotime for the time being, so there is no date handling for dates prior to December 31 1969.  There were compatibility issues with this function on different servers.  (This change was actually included, but not accurately recorded in the changelog, for 2.0.6) *update with 2.2: handling dates prior to December 31 1969 is actually platform dependent. dpicella has an updated patch that may correct the issue on affected systems.*
--Changes to integrate with reg_codes 2.1 RC1

*********************
Version 2.0.6 Beta:
*********************

** New Features:

--Changed the nature of "groupscope", ie: how "view entries by others in the same group(s)" behaves:  

Before this, a user's ability to view other entries by users in the same group was determined solely based on group membership.  So if two users were a member of the same group, any group, then they would have the ability to view each other's entries.  The sole exception was Registered Users, since everyone in the system is a member of that group.

Now, in addition to having membership in at least one group in common, that common group must have view_form permission for the form in question.  This affects the "one entry per group" setting on the form settings page as well.  

The benefit is that you can have a National Volunteers group for everyone in your organization, and a Toronto Volunteers group and a Vancouver Volunteers group for only people local to each area, and as long as you only hand out form permissions to the local groups, then members of those groups will be limited in scope to their local area.  They can still have membership in common in the National Volunteers group, but that will no longer open up all the local entries across the country to everyone else.  Before this change, having everyone in a national group like that would have effectively meant "groupscope" was the same as "globalscope".

--You can now create a custom registration/user profile form, and integrate it with the XOOPS core through use of the Registration Codes module.  See the readme file for the Registration Codes module for details.
--Formulize is now compatible with the xLanguage module.
--The title of the form is now used as the HTML page title (thanks to dpicella for the code)
--You can now pass custom text for the Save button, as well as custom text for the All Done button, to the displayForm function.
--Added the current version to the bottom of the main admin page.

** Changes/Fixes:

--Deprecated bypass_form_menu permission which was introduced in 2.0.4.  Previously, users required access to the Form Menu block OR bypass_form_menu permission, in order to view a form.  Now, view_form permission is all that is required, regardless of access to the Form Menu block.
--Changed the default behaviour for anonymous users so that they never see the list of entries screen, and only ever see the form itself (change suggested by Steve Kenow)
--Fixed a long standing bug where the "headerlist", the default columns displayed on the view entries page, would be lost if any change was made to a form, including creating new elements, reordering elements or changing any caption. --Corrected a PHP 5 compatibility issue in the data extraction layer.
--Fixed a bug related to form titles and use of multilanguage hacks.
--Introduced an intermediate form validation function that precedes the default XOOPS core validation function.  In future this can be used to perform any kind of verification/validation on data entered into a form, prior to it being submitted to the database.
--included dpicella's safestrtotime function which allows date fields to handle dates prior to the origin of Unix (December 31 1969).
--Fixed a bug in the export of data, when there were hard returns in data entered into textboxes.  The hard returns were being translated directly into the .csv instead of being treated as line breaks.
--Fixed an obscure bug that occurred in forms created with the displayElement function, if there was a null or zero default value for the element.

*********************
Version 2.0.5 Beta:
*********************

IMPORTANT:  Read the readme file for this patch.  There are other things to do besides overwrite your files.

** New Features:

--Added the ability to create new entries in a form by importing data from a .csv file, and added a permission to allow or disallow this ability on a per form basis.
--Added an option to allow the default values for form elements to be saved to the database even when those elements are not visible to the current user.  This allows for situations where you need a some default data to be stored with each entry, but do not want all users to be able to interact with the form elements that control that data.  ie: someone places an order using a form, and a manager elsewhere can review the order and update its status.  The status element is accessible only to the manager so that the person placing the order cannot fiddle with the order status, but when the person places the order you still need a default status, such as "pending" to be written to the database so the order shows up with the correct status when a manager reviews it for the first time.
--Added four metadata fields to the list of selectable columns on the "change columns" screen: user who created entry, user who last modified entry, creation data, and last modification date.  Note: if you sort by username, the result is based on user ID number and not spelling.  :-(
--Added the displayElementSave function to give application developers control over the placement of the "Save" button when using displayElement in a Pageworks page.
--Added an override parameter to displayForm and displayEntries which forces the display of all forms in a "unified-display framework" regardless of the user's permissions to view the individual forms.
--Added a parameter to the getData function to force queries on a framework to work with the main form only (ignore all linked forms)
--Added ability to use getData to query any table in the database
--Added the displayMeta function to handle printing out the names of users based on ID numbers
--Added the ability to access "display" functions using a smarty template in your Pageworks pages
--Added a parameter to displayForm so that you can add some standard user account fields to the top of any form.  This allows you to have a single form where people can edit their full name, username, password, e-mail address, and time zone, plus whatever custom fields you want to have in the form.  
--All forms now use the Xoops security token system
--Added language constants

** Changes/Fixes:

--Included two bug fixes from Steve Kenow.  Thanks!!
--Changed the displayButton and displayElement functions to use frameworks
--Fixed a bug in the data extraction layer which caused invalid results to be returned when using a metadata filter on a framework where no entries in a linked form matched the criteria (huh?!)
--Optimized memory usage in the extraction layer again
--Fixed a bug that required view_groupscope permission for a form if the form was set to "one entry per group"

*********************
Version 2.0.4 Beta:
*********************

** New Features:

--Included dpicella's improvement to the {TODAY} keyword so that {TODAY-10} and {TODAY+3} can be used in advanced searches
--Added the displayElement function
--Added the displayButton function
--Added the option to use a complex set of arrays for the filter in the getData function, to support more complex boolean structures
--Added support for filtering by any metadata field (uid, proxyid, creation_date, mod_date)
--Added support for filtering by the element ID number when using a regular form and not a framework
--Added support for any kind of operator as part of a filter
--Added support for using an array of groupids as the scope for the getData function

** Calendar:

--Added a "delete" option to the calendar generated by displayCalendar, and some formatting improvements
--Added support for ranges to dates to displayCalendar
--Added a displayFilter function for use with displayCalendar, so the entries in the calendar can be limited to only ones that match a criteria in a dropdown list

** General:

--Included retspoox's fix for a major bug that occurred when using Formulize with PHP 4.4.0.  If you were having the same form element repeat over and over again, this problem is fixed now.  
--Major optimization to the extraction layer when getting data from linked forms (only data linked to the main form is used to generate the final result set)
--Various changes throughout so that the id number of the form is used in the URL instead of the name of the form
--Changed the permission structure so that access to the Form Menu is normally required in order to have access to a form (you cannot normally just go to the URL for a form, unless you have permission to view the Form Menu)
--Added a new permission, bypass_form_menu, that allows users direct access to a form via the URL even if they do not have access to the Form Menu
--Added a partial French translation
--Improved the interface for displaying entries in subforms when viewing an entry in a main form (up to three values are displayed for each entry, not just the first value)
--Added a param to the displayEntries function to restrict the available views when loading a specific view
--Changed the formatting of the list of available views in the Save View screen
--Added partial support for Marcan's multilanguage hack throughout
--Added another layer to the security check to account for cases where users have received access to information courtesy of a published view
--Improved the handling of the default columns in cases where no defaults have been specified by the form creator and there are no required fields
--Altered the delete-an-entry logic so that all related entries are also deleted if the user is interacting with a framework of forms
--Improved the gathering of metadata about an entry so irregularities in the database don't cause the incorrect modification time to be returned
--Fixed a bug related to updating the modification user for an entry in one form in a framework when another user is the owner of the corresponding entry in the main form in the framework
--Several minor bug fixes
--Added support for integrating data from one-to-one forms in a framework when queried with the getData function
--Fixed a bug that was preventing the "lock controls" option for a saved view from actually being saved as part of the view
--Fixed a bug that prevented loaded view from being displayed if the user did not have the view published to them
--Fixed a bug that occurred when using Formulize and the multilanguage hack which resulted in previously entered data being lost in the database if the caption for a form element was changed
--Updated the API document called Using_Formulize-Pageworks_to_Make_Custom_Applications.pdf

*********************
Version 2.0.3 Beta:
*********************

IMPORTANT:  Read the readme file for this patch.  There are a couple other things to do besides overwrite your files.

--Added a "Printable View" button to the bottom left of every form.  This button causes a popup window to appear with the current form in it, including all the details of the current entry as of the last time it was saved.  This window is suitable for printing since it has no header, footer, menu blocks, etc.
--Added the ability to turn individual form elements on or off for specific groups.  The Display checkbox in the form creation/form editing interface has been changed to a listbox containing all the groups.
--Added an option in the form creation/form editing interface for text boxes to be set to "numbers only", which will cause all non-numeric characters users might type in the box to be ignored.  This is so you can ensure that mathematical operations using the values in a text box will work correctly.
--Added an "Add multiple entries" button to the summary list of entries.  Changed the behaviour of the "Add a new entry" button so that it only lets you add one entry to a form.  This is because the previous behaviour of the "Add a new entry" button was to redisplay a blank form after you click the "Save" button.  That was confusing if you only wanted to add one entry.
--converted the functioning of the displayCalendar function to be fully templated using Smarty.  All the main display functions will be converted to this approach eventually.  TO USE THE CALENDAR FEATURE, UPDATE FORMULIZE IN YOUR SYSTEM ADMIN->MODULES AREA SO THE NEW TEMPLATES TAKE EFFECT.
--added three template options for displayCalendar:  'month' is the standard one month view.  'mini_month' is an abreviated month view where event names are accessible as tooltips when hovering over the day.  'micro_month' is a very small calendar view suitable for use in a block.  THE CALENDAR FEATURE IS STILL VERY EXPERIMENTAL, FULL TESTING HAS NOT BEEN COMPLETED, AND NEW PARAMETERS COULD BE INTRODUCED THAT WILL BREAK CURRENT APPLICATIONS.  
--Added a new parameter to displayForm called overrideSubMulti, which is used to override the default multi-entry form behaviour for subforms in a Framework.
--Fixed a bug where the delete sub-entry confirmation box would appear after pressing Enter in a textbox, if sub-entries that could be deleted were present in the form.
--Improved handling of forms with a one-to-one relationship in a framework.  Three or more forms in a one-to-one relationship should all work okay now, even if they are not all accessible by the same groups of users.
--Enabled the security check in formDisplay so that all forms in a Framework are verified before being displayed (previously only the first mainform in a Framework was verified).  This allows more complex Framework scenarios where users in different groups with different permissions can interact with the some of the forms in a unified-display Framework, but not others forms.
--Forced the text of "one column" text display elements to be non-bold.  This makes forms easier to read when the default text style for that table cell class is bold.
--Improved the UI for saving an entry when a sub-form has been accessed and the parent form is using overrideMulti.
--changed name of clone() function in admin-side code so as not to conflict with PHP 5.
--Slightly improved the UI for subforms by adding some instructional text.
--minor optimization to page loading; calls to extraneous code removed.
--minor HTML correction in popup windows off of the summary list of entries page
--Added code for the removal of links between entries in one-to-one related forms when one of the entries is deleted.
--Various language constants added for the new features
--Updated the API document called Using_Formulize-Pageworks_to_Make_Custom_Applications.pdf

*********************
Version 2.0.2 Beta:
*********************
--added displayCalendar function for interacting with form or framework data in a calendar style view - if you experience errors with the calendar, update the module in System Admin->Modules, and try again.
--added various language constants
--added security checks to account for invalid groups being specified as the scope of a view
--fixed a UI bug which could result in invalid groups being specified as the scope of a view
--expanded $overrideValue functionality in displayForm to include date boxes, not just select boxes
--more optimization of performance and memory usage in the extraction layer
--added handling of parse errors if the user specifies an invalid advanced search query.  A descriptive error message is now displayed when this happens.
--fixed bug where data in a form corresponding to a particular element was not being deleted when that element was deleted from the form
--changed handling of linked selectboxes to allow duplicate values to be sent from the source form element.  Previously, if two different source entries had the same value in the linked field, then only the first would be passed to the target form.  This means linked fields could have two or more options in them with identical text.
--added a new form action: clone form and data.  This will create a copy of a form, plus all the data that has been entered in the form
--enabled the edit_form and delete_form permissions.  Now, in the administration side, users will only have access to forms for which they have edit_form permission, and will only be allowed to delete forms for which they have delete_form permission.  Webmasters have these permissions by default.
--updated API docs with more conceptual information and lots more examples

*********************
Version 2.0.1 Beta:
*********************
--added a couple language constants
--added better handling of many-to-one relationships in a Framework (in addition to one-to-many relationships)
--improved display of entries in a non-unified-display Framework
--fixed a bug in the saving of entries, which would result in data for fields which had an apostrophe in the caption to not be saved correctly (if anyone has experienced lost data due to this, please contact us for assistance recovering the data, it is not gone, just not easily accessible).
--improved display of links to sub-forms when the key field for the link has no value
--improved memory usage in the data extraction layer
--added a button to the summary list UI, to allow for changing of specific group selections without having to pick a completely different kind of view first

*********************
Version 2.0 Beta:
*********************
--initial release